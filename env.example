############################################
# HTTP server configuration

# HTTP server listening host or address. Multiple addresses can be specified
# separated by comma, empty value equals to listening on all interfaces.
# Defaults to localhost in development and empty value in production
#HTTP_HOST=

# HTTP server port
# Defaults to 3000
#HTTP_PORT=3000

# When certificates are provided, the server will listen as HTTPS on HTTP_PORT
#HTTPS_KEY_FILE=certs/https_key.pem
#HTTPS_CERT_FILE=certs/https_cert.pem

# Comma-separated list of trusted client IP addresses for the upload API.
# Clients not in the list cannot access the upload API (PUT/POST files and call
# Repository Management endpoint), they will get rejected as they are considered
# untrusted. The client address will be taken from proxy header X-Forwarded-For
# if request comes from trusted proxy (see TRUST_PROXY below), or from client
# socket address. The format of the address must conform to proxy-addr library
# syntax, see https://www.npmjs.com/package/proxy-addr. In short, the address
# might be either loopback (127.0.0.1, ::1), linklocal (fe80::/10 and
# 169.254.0.0/16), uniquelocal (fc00::/7, 10.0.0.0/8, 172.16.0.0/12,
# 192.168.0.0/16), or custom address with mask like 10.10.1.0/24 or
# 172.16.5.2/32 or fd03:cc8b:0d31::/48.
# Defaults to empty string (trust everybody)
#UPLOAD_ALLOWED_IPS=

# Comma-separated list of trusted proxy IP addresses, if any. Proxy
# headers will be accepted only from trusted proxies. Multiple addresses can be
# specified separated by comma. The syntax for TRUST_PROXY is the same as for
# the UPLOAD_ALLOWED_IPS parameter above.
# Defaults to empty string (don't trust any proxy headers).
#TRUST_PROXY=loopback

# Basic authorization for the upload API in the form username:password. When
# set, clients will not be able to access the upload API (PUT/POST files and
# call Repository Management endpoint) without providing the credentials. The
# credentials will be checked against the credentials in the HTTP Authorization
# header. If credentials do not contain colon, space and comma, more credentials
# can be provided in a comma-separated list.
# Defaults to empty string (no authorization)
#UPLOAD_BASIC_AUTH=upload:my-secret-password

# Use dictionary-like notation with double-quotes to allow special characters
# like quotes, spaces, commas, colons, etc. The quotes will be stripped before
# the password is used.
#UPLOAD_BASIC_AUTH={upload:"my \"secret:,password;", "upload 2":"other password"}

# Uploaded file size limit in bytes. Applies to single file during upload.
# Defaults to no limit
#UPLOAD_SIZE_LIMIT=16777216

# Upload POST field name for the file to upload. The field name is used to find
# the uploaded file in the request body. The field name is case-sensitive.
#UPLOAD_POST_FIELD=package

############################################
# Repository configuration

# Incoming directory.
# Defaults to <current dir>/data/incoming
#INCOMING_DIR=./data/incoming

# Target repository directory. Sub-folders deb and rpm will be created with
# another several levels of subfolders named by distributions and releases.
# Debian will be reachable under <repo_dir>/deb/<distribution>/dists/<release>.
# RedHat will be reachable under <repo_dir>/rpm/<distribution>/<release>.
# Defaults to <current dir>/data/repo
#REPO_DIR=./data/repo

# State-holding directory where we store the state.
# Defaults to <current dir>/data/repo-state
#REPO_STATE_DIR=./data/repo-state

# GPG private key used to sign Debian and RedHat repository data. The key will
# be automatically imported and used also to verify Debian signatures. The key
# shell be password-less and either in ASCII-armored format or binary format.
# Defaults to nothing (do not sign repository data)
#GPG_REPO_PRIVATE_KEY_FILE=repo-key.asc

# GPG public keys for reprepro tool to verify Debian signatures. The file might
# contain multiple public keys. If the file is missing and the Debian-like
# repository contains signed Debian files, they will be printed to server logs.
# Defaults to nothing
#GPG_PUBLIC_KEYS_FILE=public_keys.key

# GPG public keys directory containing keys to verify Debian signatures.
# Defaults to nothing
#GPG_PUBLIC_KEYS_DIR=

# Signing script used to sign repository data. Used by Debian reprepro hook as
# well as during RedHat repository building. The script always gets three
# arguments: input file to sign, output file with embedded signature, and output
# file name for detached signature. See example implementation in repository.
# Defaults to ./scripts/sign.sh
#SIGN_SCRIPT=./scripts/sign.sh

# Wrapper script for RedHat's repository createrepo_c tool. Ensures that
# generated repository data is signed. The script gets two arguments: base
# folder with RPMs (RPMs are stored under
# Packages/<package first char>/ subdirectories), signing script path (see
# above). The script will be called initially with --version argument to check
# the existence of the createrepo_c tool, the default implementation forwards
# the call to createrepo_c tool. If the tool is not available (non-zero exit
# code or the script execution fails) or if the CREATEREPO_SCRIPT is defined
# empty, the RedHat repository upload functionality will be disabled.
# Defaults to ./scripts/createreo.sh
#CREATEREPO_SCRIPT=./scripts/createrepo.sh

# Path to the reprepro tool. The tool will be called initially with --version
# argument to check the existence of the tool. If the tool is not available
# (execution fails) or if the REPREPRO_BIN is defined empty, the Debian
# repository upload functionality will be disabled.
# Defaults to reprepro in the system PATH
#REPREPRO_BIN=reprepro

# Path to the GPG tool. The GPG is used by the Debian reprepro tool to verify
# the signatures of the signed incoming packages. When the reprepro tool is not
# available (see above), the GPG tool will not be used as well. The tool will be
# called initially with --version argument to check the existence of the tool.
# If the tool is not available (execution fails) or if the GPG_BIN is defined
# empty, no public keys will be imported to GPG keyring, so no public keys will
# be used to verify the package signatures.
# Defaults to gpg
#GPG_BIN=gpg

# Path to the GPG home directory. The directory is used to store the GPG keyring
# and other GPG-related files.
# Defaults to ~/.gnupg
#GPGHOMEDIR=~/.gnupg

# Default Origin: value of Debian-like repository. The environment key can
# be overridden per-release like DEB_ORIGIN_DEBIAN_BOOKWORM, or
# DEB_ORIGIN_BOOKWORM, or per distribution like DEB_ORIGIN_DEBIAN. The
# value will be evaluated in the following order, first non-empty wins:
#
#   1. DEB_ORIGIN_DEBIAN_BOOKWORM - most specific
#   2. DEB_ORIGIN_BOOKWORM
#   3. DEB_ORIGIN_DEBIAN
#   4. DEB_ORIGIN - least specific
#
# The environment variable name is always upper-case and non alphanumeric
# characters are replaced with underscores.
#
# Defaults to none (do not output Origin: field)
#DEB_ORIGIN=

# Default Description: value of Debian-like repository. The environment key can
# be overridden per-release like DEB_DESCRIPTION_DEBIAN_BOOKWORM, or
# DEB_DESCRIPTION_BOOKWORM, or per distribution like DEB_DESCRIPTION_UBUNTU.
# The precedence rules are the same as for DEB_ORIGIN values.
# Defaults to none (do not output Description: field)
#DEB_DESCRIPTION=

############################################
# Installation instructions HTML templates configuration

# Custom repository installation HTML templates directory. The directory is used
# to get the HTML templates with installation instructions. The templates are
# rendered using ETA engine, see https://eta.js.org/. The templates should have
# .eta.html extension. The templates are cached, so to test changes, you need to
# restart the application.
#
# The template can be specified per-release like deb-debian-bookworm.eta.html or
# debian-bookworm.eta.html, or per-distribution like deb-debian.eta.html. The
# template file name will be evaluated in the following order, first found wins:
#
#   1. <template-dir>/deb-debian-bookworm.eta.html
#   2. <template-dir>/deb-bookworm.eta.html
#   2. <template-dir>/deb-debian.eta.html
#   3. <template-dir>/deb.eta.html
#
# For RedHat distributions the prefix is rpm instead of deb. The filename is
# always lower-case and non-alphanumeric characters are replaced with dashes.
# The particular template location can be overridden by environment variables,
# which takes precedence. See below for details.
#
# The default template for Debian and RedHat repositories is built-in, see the
# templates directory in the source code repository. Each <pre> element is
# rendered as a separate shell-code block (no syntax highlighting) with an extra
# Copy button in the top-right corner. There might be also other HTML elements,
# but there is currently no default-styling provided for them â€“ test the templates
# to see what they look like.
#
# The template is rendered with the following variables:
#
#   - rootUri - root URI of the web server
#   - repoUri - deb or rpm repository root URI
#   - repoSlug - repository name usable as a folder name, defaults to host name
#   - repoDashSlug - repoSlug with only alphanumeric characters and everything
#     else converted to dashes (used by RedHat repositories)
#   - repoName - human-readable repository name, defaults to
#     "Repository <host name>"
#   - gpgUri - GPG public key download URI (if GPG_PUBLIC_KEYS_FILE is set)
#   - gpgKeyDir - directory where to store the downloaded GPG public key,
#     defaults to /etc/apt/trusted.gpg.d for Debian repositories and to
#     /etc/pki/rpm-gpg for RedHat repositories
#   - gpgKeyFile - GPG public key file name, defaults to <repoSlug>.gpg for
#     Debian repositories and to RPM-GPG-KEY-<repoDashSlug> for RedHat
#     repositories
#   - distroUri - distribution root URI
#   - distroSlug - distribution name usable as a folder name, taken from the
#     actual folder name
#   - distroName - human-readable distribution name, defaults to capitalized
#     slug
#   - releaseUri - release root URI
#   - releaseSlug - release name usable as a folder name, taken from the
#     actual folder name
#   - releaseName - human-readable release name, defaults to capitalized
#     slug
#   - releaseComponents - array of release components, taken from the Debian
#     repository configuration (Debian repository only)
#   - releaseArchitectures - array of release architectures, taken from the
#     Debian repository configuration (Debian repository only)
#   - sourcesListDir - the sources.list.d directory location (Debian repository
#     only), defaults to /etc/apt/sources.list.d
#   - reposDir - the yum.repos.d (or similar) directory location (RedHat
#     repository only), defaults to /etc/yum.repos.d
#
# Some of the values can be overridden by environment variables. See below for
# details.
#
# The default template can be included from the template by issuing the command
# <%~ include "@default-deb" %> for Debian repositories, and
# <%~ include "@default-rpm" %> for RedHat repositories. Other
#
# Defaults to nothing (do not search for templates in the filesystem, but
# environment variables overrides are still considered)
#TEMPLATES_DIR=

# Overriding default template variable values. The default template variable
# values can be overridden by environment variables per-release like
# DEB_RELEASE_NAME_DEBIAN_BOOKWORM or DEB_RELEASE_NAME_BOOKWORM, or
# per-distribution like DEB_RELEASE_NAME_DEBIAN. The value will be evaluated in
# the following order, first non-empty wins:
#
#   1. DEB_RELEASE_NAME_DEBIAN_BOOKWORM
#   2. DEB_RELEASE_NAME_BOOKWORM
#   3. DEB_RELEASE_NAME_DEBIAN
#   4. DEB_RELEASE_NAME
#
# Other values work analogously. The environment variables corresponding to the
# template variables are:
#
#   - repoSlug - DEB_SLUG or RPM_SLUG. Falls-back to plain SLUG
#   - repoName - DEB_REPO_NAME or RPM_REPO_NAME. Falls-back to plain REPO_NAME
#   - gpgKeyDir - DEB_GPG_KEY_DIR or RPM_GPG_KEY_DIR
#   - gpgKeyFile - DEB_GPG_KEY_FILE or RPM_GPG_KEY_FILE
#   - distroName - DEB_DISTRO_NAME or RPM_DISTRO_NAME
#   - releaseName - DEB_RELEASE_NAME or RPM_RELEASE_NAME
#   - sourcesListDir - DEB_SOURCES_LIST_DIR
#   - reposDir - RPM_REPOS_DIR
#
# The values SLUG and REPO_NAME are tried verbatim, not per-distribution nor
# per-release.
#
# Defaults to nothing (use default values for the template variables)
#RPM_DISTRO_NAME_CENTOS=CentOS

# Overriding default template location. The default template location can be
# overridden by environment variables per-release like RPM_TEMPLATE_SUSE_16 or
# RPM_TEMPLATE_16, or per-distribution like RPM_TEMPLATE_SUSE. The value will be
# evaluated in the following order, first non-empty wins:
#
#   1. RPM_TEMPLATE_SUSE_16
#   2. RPM_TEMPLATE_16
#   3. RPM_TEMPLATE_SUSE
#   4. RPM_TEMPLATE
#
# For Debian repositories the prefix is DEB instead of RPM. The environment
# variable name is always upper-case and non alphanumeric characters are
# replaced with underscores.
#
# Defaults to nothing (use default template location)
#RPM_TEMPLATE=

############################################
# Application configuration

# Docker container user UID. The entrypoint script updates the `node` user to
# this UID, so the container can access files created by the host user.
# Defaults to 1000
#UID=1000

# Docker container group GID. The entrypoint script updates the `node` group to
# this GID, so the container can access files created by the host group.
# Defaults to 1000
#GID=1000

# Path to the .env file to load. The file, if exists, is loaded during
# application startup, so the environment variable needs to be set before
# running the application. Use file /dev/null to disable the loading.
# Defaults to .env
#DOTENV_CONFIG_PATH=

# Minimum logging level to emit messages, can be (from lower to higher level)
# either debug, info, warn or error.
# Defaults to info
#LOG_LEVEL=
